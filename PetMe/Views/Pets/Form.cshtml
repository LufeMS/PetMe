@model PetMe.ViewModels.PetFormViewModel
@{
    /**/

    ViewBag.Title = "PetForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container w-50 my-5">
    <div class="card">
        @using (Html.BeginForm("SalvarPet", "Pets", FormMethod.Post, new { @style = "margin-left: 26%; text-align:center", @id = "pet-form", enctype = "multipart/form-data" }))
        {
            <div class="hr-sect">Informações</div>
            <div class="form-row form-group">
                <div class="col">
                    @Html.LabelFor(p => p.Name)
                    @Html.TextBoxFor(p => p.Name, new { @class = "form-control", @placeholder = "Nome do Pet" })
                    @Html.ValidationMessageFor(p => p.Name)
                </div>
                <div class="col">
                    @Html.LabelFor(p => p.AgeInMonths)
                    @Html.TextBoxFor(p => p.AgeInMonths, new { @class = "form-control", @placeholder = "Idade (em meses)" })
                    @Html.ValidationMessageFor(p => p.AgeInMonths)
                </div>
            </div>
            <div class="form-row form-group">
                <div class="col">
                    @Html.LabelFor(p => p.PetTypeId)
                    @Html.DropDownListFor(p => p.PetTypeId, new SelectList(Model.PetTypes, "Id", "Name"), "Selecione...", new { @class = "custom-select" })
                    @Html.ValidationMessageFor(p => p.PetTypeId)
                </div>
                <div class="col">
                    @Html.LabelFor(p => p.PetBreedTypeId)
                    @Html.DropDownListFor(p => p.PetBreedTypeId, new SelectList(Model.PetBreedTypes, "Id", "Name"), "Selecione o tipo de raça", new { @class = "form-control custom-select d-block w-100" })
                    @Html.ValidationMessageFor(p => p.PetBreedTypeId)
                </div>
            </div>
            <div class="form-row form-group">
                <div class="col">
                    @Html.LabelFor(p => p.BreedDetail)
                    @Html.TextBoxFor(p => p.BreedDetail, new { @class = "form-control", @placeholder = "Detalhes da raça (Opcional)" })
                </div>
            </div>
            <div class="form-row form-group">
                <div class="col">
                    @Html.LabelFor(p => p.Color)
                    @Html.TextBoxFor(p => p.Color, new { @class = "form-control", @placeholder = "Cor (Opcional)" })
                </div>
                <div class="col">
                    @Html.LabelFor(p => p.PetSizeId)
                    @Html.DropDownListFor(p => p.PetSizeId, new SelectList(Model.PetSizes, "Id", "Name"), "Selecione o porte do pet", new { @class = "form-control custom-select d-block w-100" })
                    @Html.ValidationMessageFor(p => p.PetSizeId)
                </div>
                <div class="col">
                    @Html.LabelFor(p => p.PetGenderId)
                    @Html.DropDownListFor(p => p.PetGenderId, new SelectList(Model.PetGenders, "Id", "Name"), "Selecione o sexo do pet", new { @class = "form-control custom-select d-block w-100" })
                    @Html.ValidationMessageFor(p => p.PetGenderId)
                </div>
            </div>
            <div class="row form-group ml-3">
                <div class="col-md-4 mb-3">
                    @Html.CheckBoxFor(p => p.Vaccinated, new { @class = "custom-control-input" })
                    <label class="custom-control-label" for="vacinadoCheck">Vacinado</label>
                </div>
                <div class="col-md-4 mb-3">
                    @Html.CheckBoxFor(p => p.Castrated, new { @class = "custom-control-input" })
                    <label class="custom-control-label" for="castradoCheck">Castrado</label>
                </div>
                <div class="col-md-4 mb-3">
                    @Html.CheckBoxFor(p => p.Trained, new { @class = "custom-control-input" })
                    <label class="custom-control-label" for="adestradoCheck">Adestrado</label>
                </div>
            </div>
            <div class="form-group">
                <div class="col">
                    @Html.LabelFor(p => p.Description)
                    @Html.TextAreaFor(p => p.Description, new { @class = "form-control", @placeholder = "Conte-nos mais sobre seu Pet (Opcional)" })
                    @Html.ValidationMessageFor(p => p.Description)
                </div>
            </div>
            <div class="form-group">
                @Html.CheckBoxFor(p => p.SpecialCare, new { @class = "custom-control-input" })
                <label class="custom-control-label" for="cuidadosEspeciaisCheck">Cuidados Especiais</label>
                @Html.LabelFor(p => p.DetailsSCare)
                @Html.TextAreaFor(p => p.DetailsSCare, new { @class = "form-control", @placeholder = "Descrição dos cuidados especiais (Opcional)" })
                @Html.ValidationMessageFor(p => p.DetailsSCare)
            </div>
            <div class="hr-sect">Endereço</div>
            <div class="form-row form-group" style="margin-left: 3%;">
                @if (Model.Id == 0)
                {
                    <div class="col-md-4">
                        @Html.CheckBoxFor(p => p.LivesWithOwner, new { @id = "CheckReside", @class = "custom-control-input", @onclick = "ocultaCampos();", @checked = "true" })
                        <label class="form-check-label" for="CheckVacinado">Reside com o dono</label>
                    </div>
                }
                else
                {
                    <div class="col-md-4">
                        @Html.CheckBoxFor(p => p.LivesWithOwner, new { @id = "CheckReside", @class = "custom-control-input", @onclick = "ocultaCampos();" })
                        <label class="form-check-label" for="CheckVacinado">Reside com o dono</label>
                    </div>
                }
            </div>
            <div class="form-inline form-group mt-3" id="divCep">
                @Html.TextBoxFor(p => p.ZipCode, new { @class = "form-control col-2 mr-2", @id = "userCep", @name = "userCep", @placeholder = "CEP" })
                @Html.ValidationMessageFor(p => p.ZipCode)
                <button class="btn button-green btn-sm" id="pesquisar-cep">
                    <i class="fas fa-search"></i>
                </button>
            </div>
            <div class="form-row form-group" id="divLogradouro">
                <div class="col-10">
                    @Html.LabelFor(p => p.Address)
                    @Html.TextBoxFor(p => p.Address, new { @class = "form-control", @placeholder = "Rua, Avenida, Praça...", @id = "userAddress" })
                    @Html.ValidationMessageFor(p => p.Address)
                </div>
                <div class="col-2">
                    @Html.LabelFor(p => p.AddressNumber)
                    @Html.TextBoxFor(p => p.AddressNumber, new { @class = "form-control", @placeholder = "Número", @id = "userAddressNumber" })
                    @Html.ValidationMessageFor(p => p.AddressNumber)
                </div>
            </div>
            <div class="form-row form-group" id="divComplemento">
                <div class="col-4">
                    @Html.LabelFor(p => p.AddressComplement)
                    @Html.TextBoxFor(p => p.AddressComplement, new { @class = "form-control", @placeholder = "Complemento (Opcional)", @id = "userAddressComplement" })
                    @Html.ValidationMessageFor(p => p.AddressComplement)
                </div>
                <div class="col-3">
                    @Html.LabelFor(p => p.District)
                    @Html.TextBoxFor(p => p.District, new { @class = "form-control", @placeholder = "Bairro", @id = "userDistrict" })
                    @Html.ValidationMessageFor(p => p.District)
                </div>
                <div class="col-3">
                    @Html.LabelFor(p => p.CountyView)
                    @Html.TextBoxFor(p => p.CountyView, new { @class = "form-control", @placeholder = "Cidade", @id = "userCity" })
                    @Html.ValidationMessageFor(u => u.CountyView)
                </div>
                <div class="col-2">
                    @Html.LabelFor(p => p.StateView)
                    @Html.TextBoxFor(p => p.StateView, new { @class = "form-control", @placeholder = "UF", @id = "userUF" })
                    @Html.ValidationMessageFor(p => p.StateView)
                </div>
            </div>
            <div class="hr-sect">Importar imagens</div>
            <div class="form-group mb-4 mr-3">
                <div class="custom-file">
                    @Html.TextBoxFor(m => m.Pictures, new { @type = "file", @multiple = "multiple", @class = "custom-file-input", @id = "CustomFile" })
                    <label class="custom-file-label" for="CustomFile">Escolha uma(s) foto(s)...</label>
                </div>
            </div>
            <hr>

            @Html.AntiForgeryToken()
            @Html.HiddenFor(p => p.Id)
            @Html.HiddenFor(p => p.OwnerId)

            <button class="btn button-green btn-block" type="submit">Salvar</button>
            if (Model.Id != 0)
            {
                <a id="js-delete" data-pet-id="@Model.Id" class="btn btn-block btn-secondary">Excluir</a>
            }
        }
    </div>
</div>

@section scripts
{
    <script>
        $(document).ready(function () {

            function ocultaCampos() {
                if (document.getElementById('CheckReside').checked == true) {
                    document.getElementById('divCep').style.display = "none";
                    document.getElementById('divLogradouro').style.display = "none";
                    document.getElementById('divComplemento').style.display = "none";
                } else {
                    document.getElementById('divCep').style.display = "flex";
                    document.getElementById('divLogradouro').style.display = "flex";
                    document.getElementById('divComplemento').style.display = "flex";
                }
            }

            ocultaCampos();

            function limpa_formulário_cep() {
                // Limpa valores do formulário de cep.
                $("#userAddress").val("");
                $("#userDistrict").val("");
                $("#userCity").val("");
                $("#userUF").val("");
                $("#userAddressComplement").val("");
                $("#userAddressNumber").val("");
            }

            $("#pesquisar-cep").click(function () {
                var cep = $("#userCep").val();

                if (cep != "") {

                    //Expressão regular para validar o CEP.
                    var validacep = /^[0-9]{8}$/;

                    //Valida o formato do CEP.
                    if (validacep.test(cep)) {

                        //Preenche os campos com "..." enquanto consulta webservice.
                        $("#userAddress").val("...");
                        $("#userDistrict").val("...");
                        $("#userCity").val("...");
                        $("#userUF").val("...");

                        $.getJSON("https://viacep.com.br/ws/" + cep + "/json/?callback=?", function (dados) {

                            if (!("erro" in dados)) {
                                //Atualiza os campos com os valores da consulta.
                                $("#userAddress").val(dados.logradouro);
                                $("#userDistrict").val(dados.bairro);
                                $("#userCity").val(dados.localidade);
                                $("#userUF").val(dados.uf);
                            } //end if.
                            else {
                                //CEP pesquisado não foi encontrado.
                                limpa_formulário_cep();
                                alert("CEP não encontrado.");
                            }
                        });
                    }//end if.
                    else {
                        //cep é inválido.
                        limpa_formulário_cep();
                        alert("Formato de CEP inválido.");
                    }
                } //end if.
                else {
                    //cep sem valor, limpa formulário.
                    limpa_formulário_cep();
                }

            });

            $("#pet-form").on("click", "#js-delete", function () {
                var button = $(this);

                bootbox.confirm("Deseja mesmo excluir esse pet?", function (result) {
                    if (result) {
                        $.ajax({
                            url: "/api/pets/" + button.attr("data-pet-id"),
                            method: "DELETE",
                            succes: function () {
                                toastr.success("Pet excluido com sucesso!");
                            },
                            complete: function (data) {
                                window.location.href = "@Url.Action("PetOwnerList")"
                            }
                        });
                    }
                })
            });
        });
    </script>
}



