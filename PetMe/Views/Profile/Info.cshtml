@model PetMe.ViewModels.UserProfileViewModel
@{
    ViewBag.Title = "Info";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">

    @using (Html.BeginForm("SaveUser", "Profile", FormMethod.Post, htmlAttributes: new { enctype = "multipart/form-data", @style = "margin-left: 26%; text-align:center" }))
    {
        <div class="py-5 text-center">

            @if (Model.Avatar != null && Model.Avatar.LongLength > 0)
            {
                var base64 = Convert.ToBase64String(Model.Avatar);
                var imgsrc = string.Format("data:image/jpg;base64,{0}", base64);

                <img src='@imgsrc' class="d-block mx-auto mb-4" alt="" width="85" height="85" />
            }
            else
            {
                <img src="~/Resources/blank-profile-picture.png" class="d-block mx-auto mb-4" alt="" width="85" height="85" />

            }

            <input type="file" name="avatarUpload" id="avatarUpload" />
            <h2>@Model.UserName (@Model.Email)</h2>
        </div>

        @Html.HiddenFor(u => u.UserName)
        @Html.HiddenFor(u => u.Email)

        <div class="row">
            <div class="col-md-8 order-md-1">
                <h4 class="mb-3">Minhas Informações</h4>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        @Html.TextBoxFor(u => u.FirstName, new { @class = "form-control", @placeholder = "Primeiro nome" })
                        @Html.ValidationMessageFor(u => u.FirstName)
                    </div>
                    <div class="col-md-6 mb-3">
                        @Html.TextBoxFor(u => u.Surname, new { @class = "form-control", @placeholder = "Sobrenome" })
                        @Html.ValidationMessageFor(u => u.Surname)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        @Html.TextBoxFor(u => u.Birthdate, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "Date", @placeholder = "Data de nascimento" })
                        @Html.ValidationMessageFor(u => u.Birthdate)
                    </div>
                    <div class="col-md-6 mb-3">
                        @Html.DropDownListFor(u => u.GenderId, new SelectList(Model.Genders, "Id", "Name"), "Selecione o Gênero", new { @class = "form-control custom-select d-block w-100" })
                        @Html.ValidationMessageFor(u => u.GenderId)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4 mb-3">
                        @Html.TextBoxFor(u => u.DocumentNumber, new { @class = "form-control", @placeholder = "CPF" })
                        @Html.ValidationMessageFor(u => u.DocumentNumber)
                    </div>
                    <div class="col-md-4 mb-3">
                        @Html.TextBoxFor(u => u.ZipCode, new { @class = "form-control", @id = "cep" })
                        @Html.ValidationMessageFor(u => u.ZipCode)
                    </div>
                    <div class="col-md-4 mb-3">
                        <button id="pesquisar-cep" type="button" class="btn btn-primary btn-block">Buscar Cep</button>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-8 mb-3">
                        <div class="input-group">
                            @Html.TextBoxFor(u => u.Address, new { @class = "form-control", @placeholder = "Endereço", @id = "rua" })
                            @Html.ValidationMessageFor(u => u.Address)
                        </div>
                    </div>
                    <div class="col-md-4 mb-3">
                        <div class="input-group">
                            @Html.TextBoxFor(u => u.AddressNumber, new { @class = "form-control", @placeholder = "Número", @id = "nr-endereco" })
                            @Html.ValidationMessageFor(u => u.AddressNumber)
                        </div>
                    </div>
                </div>
                <div class="mb-3">
                    @Html.TextBoxFor(u => u.AddressComplement, new { @class = "form-control", @placeholder = "Complemento (Opcional)", @id = "complemento" })
                    @Html.ValidationMessageFor(u => u.AddressComplement)
                </div>
                <div class="mb-3">
                    @Html.TextBoxFor(u => u.District, new { @class = "form-control", @placeholder = "Bairro", @id = "bairro" })
                    @Html.ValidationMessageFor(u => u.District)
                </div>
                <div class="row">
                    <div class="col-md-10 mb-3">
                        @Html.TextBoxFor(u => u.CountyView, new { @class = "form-control", @placeholder = "Cidade", @id = "cidade" })
                        @Html.ValidationMessageFor(u => u.CountyView)
                    </div>
                    <div class="col-md-2 mb-3">
                        @Html.TextBoxFor(u => u.StateView, new { @class = "form-control", @placeholder = "UF", @id = "uf" })
                        @Html.ValidationMessageFor(u => u.StateView)
                    </div>
                </div>

                @Html.HiddenFor(u => u.Id)
                @*@Html.AntiForgeryToken();*@
                <div class="mb-3">
                    <button class="btn btn-primary btn-lg btn-block">Salvar Informações</button>
                </div>
            </div>
        </div>
    }
</div>

@section scripts
{
    <script>
        $(document).ready(function () {
            function limpa_formulário_cep() {
                // Limpa valores do formulário de cep.
                $("#rua").val("");
                $("#bairro").val("");
                $("#cidade").val("");
                $("#uf").val("");
                $("#complemento").val("");
                $("#nr-endereco").val("");
            }

            $("#pesquisar-cep").click(function () {
                var cep = $("#cep").val();

                if (cep != "") {

                    //Expressão regular para validar o CEP.
                    var validacep = /^[0-9]{8}$/;

                    //Valida o formato do CEP.
                    if (validacep.test(cep)) {

                        //Preenche os campos com "..." enquanto consulta webservice.
                        $("#rua").val("...");
                        $("#bairro").val("...");
                        $("#cidade").val("...");
                        $("#uf").val("...");

                        $.getJSON("https://viacep.com.br/ws/" + cep + "/json/?callback=?", function (dados) {

                            if (!("erro" in dados)) {
                                //Atualiza os campos com os valores da consulta.
                                $("#rua").val(dados.logradouro);
                                $("#bairro").val(dados.bairro);
                                $("#cidade").val(dados.localidade);
                                $("#uf").val(dados.uf);
                            } //end if.
                            else {
                                //CEP pesquisado não foi encontrado.
                                limpa_formulário_cep();
                                alert("CEP não encontrado.");
                            }
                        });
                    }//end if.
                    else {
                        //cep é inválido.
                        limpa_formulário_cep();
                        alert("Formato de CEP inválido.");
                    }
                } //end if.
                else {
                    //cep sem valor, limpa formulário.
                    limpa_formulário_cep();
                }

            });

        });
    </script>
}